openapi: '3.0.0'
info:
  version: '1.0.0'
  title: Fake Bank - Customer API
  description: >
    This is the API for the customer domain of the fake-bank.

    Using this API you can retrieve, edit and add customers,
    as well as their address information.
  contact:
    name: Olof Nord
    url: http://olof.info
  license:
    name: GNU General Public License Version 3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
servers:
  - url: http://bank.olof.info/v1
    description: Production API server (uses live data)
  - url: http://dev.bank.olof.info/v1
    description: Development API server (uses test data)
paths:
  /customers:
    get:
      summary: List all customers
      description: Return all the customers available
      operationId: 'getCustomers'
      responses:
        '200':
          $ref: '#/components/responses/CustomerResponseList'
    post:
      summary: Create a new customer
      operationId: 'createCustomer'
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomerRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/CustomerResponse'
        '422':
          $ref: '#/components/responses/CreationFailed'

  /customers/{customerId}:
    get:
      summary: List a single customer
      operationId: 'getCustomer'
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      responses:
        '200':
          $ref: '#/components/responses/CustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      summary: Edit proprties of a single customer
      operationId: 'editCustomer'
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      requestBody:
        $ref: '#/components/requestBodies/EditCustomerRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/CustomerResponse'
        '422':
          $ref: '#/components/responses/CreationFailed'

  /customers/{customerId}/addresses:
    get:
      summary: List all addresses of a customer
      operationId: 'getAddresses'
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      responses:
        '200':
          $ref: '#/components/responses/CustomerResponseList'
    post:
      summary: Create a new customer address
      operationId: 'createAddress'
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      requestBody:
        $ref: '#/components/requestBodies/AddressRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/AddressResponse'
        '422':
          $ref: '#/components/responses/CreationFailed'

  /customers/{customerId}/addresses/{addressId}:
    get:
      summary: List a single customer address
      operationId: 'getAddress'
      parameters:
        - $ref: '#/components/parameters/CustomerId'
        - $ref: '#/components/parameters/AddressId'
      responses:
        '200':
          $ref: '#/components/responses/AddressResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Replace a customer address
      operationId: 'editAddress'
      parameters:
        - $ref: '#/components/parameters/CustomerId'
        - $ref: '#/components/parameters/AddressId'
      requestBody:
        $ref: '#/components/requestBodies/AddressRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/AddressResponse'
        '422':
          $ref: '#/components/responses/CreationFailed'

components:
  # Reusable schemas (data models)
  schemas:
    Customer:
      type: object
      description: This is the model which is used when creating or returning a customer
      required:
        - firstName
        - lastName
        - email
        - dateOfBirth
        - nationality
      properties:
        id:
          type: string
          readOnly: true
          format: uuid
          example: ecd8c8a9-edf7-4ad6-a958-f592501c8c00
          description: The generated customer id
        created:
          type: string
          readOnly: true
          format: date-time
          example: '2019-01-21T05:47:08.644'
          description: The generated customer creation time
        firstName:
          type: string
          maxLength: 255
          example: Sven
          description: The full first name
        lastName:
          type: string
          maxLength: 255
          example: Svensson
          description: The full last name
        email:
          type: string
          maxLength: 100
          format: email
          example: sven.svensson@gmail.com
          description: The email address
        dateOfBirth:
          type: string
          format: date
          example: '1970-01-01'
          description: The date of birth
        nationality:
          type: string
          maxLength: 255
          default: German
          example: Swedish
          description: The nationality
        addresses:
          $ref: '#/components/schemas/Addresses'

    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'

    EditCustomer:
      type: object
      description: This is the model which is used when editing a customer
      properties:
        firstName:
          type: string
          maxLength: 255
          example: Sven
          description: The full first name
        lastName:
          type: string
          maxLength: 255
          example: Svensson
          description: The full last name
        email:
          type: string
          maxLength: 100
          format: email
          example: sven.svensson@gmail.com
          description: The email address
        nationality:
          type: string
          maxLength: 255
          example: German
          description: The nationality

    Address:
      type: object
      description: This is the model which is used when adding or replacing an address
      required:
        - streetAndNumber
        - postcode
        - city
        - country
      properties:
        id:
          type: string
          readOnly: true
          format: uuid
          example: b7f538d2-4c03-4c45-9071-9a2bd158c597
          description: The generated address id
        created:
          type: string
          readOnly: true
          format: date-time
          example: '2019-02-22T05:47:08.644'
          description: The generated address creation time
        alias:
          type: string
          maxLength: 255
          example: Home
          description: An alias for the address
        streetAndNumber:
          type: string
          maxLength: 255
          example: Panoramastr. 1A
          description: The street and street number
        additionalInformation:
          type: string
          maxLength: 255
          example: Backyard
          description: Additional information
        postcode:
          type: integer
          example: 10178
          description: The postal code
        city:
          type: string
          maxLength: 255
          example: Berlin
          description: The city
        country:
          type: string
          maxLength: 255
          default: Germany
          example: Germany
          description: The country

    Addresses:
      type: array
      items:
        $ref: '#/components/schemas/Address'

  # Reusable operation parameters
  parameters:
    CustomerId:
      name: customerId
      in: path
      required: true
      description: The id of the customer to work with
      example: ecd8c8a9-edf7-4ad6-a958-f592501c8c00
      schema:
        type: string
        format: uuid

    AddressId:
      name: addressId
      in: path
      required: true
      description: The id of the address to work with
      example: b7f538d2-4c03-4c45-9071-9a2bd158c597
      schema:
        type: string
        format: uuid

  # Reusable request bodies
  requestBodies:
    CreateCustomerRequestBody:
      description: Body to create a customer
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
          example:
            firstName: Lisa
            lastName: Svensson
            email: lisa.svensson@gmail.com
            dateOfBirth: '1970-01-01'
            nationality: German

    EditCustomerRequestBody:
      description: Body to edit a customer
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EditCustomer'
          examples:
            editLastName:
              summary: Edit the last name
              value:
                lastName: Nilsson
            editEmail:
              summary: Edit the email address
              value:
                email: lisa.nilsson@gmail.com

    AddressRequestBody:
      description: Body to create a customer address
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'
          example:
            alias: Work
            streetAndNumber: Riksgatan 1
            postcode: 10012
            city: Stockholm
            country: Sweden

  # Reusable responses
  responses:
    NotFound:
      description: Resource not found
    BadRequest:
      description: Resource lookup failed
    CreationFailed:
      description: Resource creation failed

    CustomerResponse:
      description: Customer response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
          example:
            id: ecd8c8a9-edf7-4ad6-a958-f592501c8c00
            created:  '2019-01-21T05:47:08.644'
            firstName: Lisa
            lastName: Svensson
            email: lisa.svensson@gmail.com
            dateOfBirth: '1970-01-01'
            nationality: German

    CustomerResponseList:
      description: A list of customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customers'

    AddressResponse:
      description: Address response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'
          example:
            id: b7f538d2-4c03-4c45-9071-9a2bd158c597
            created: '2019-02-22T05:47:08.644'
            alias: Work
            streetAndNumber: Riksgatan 1
            postcode: 10012
            city: Stockholm
            country: Sweden

    AddressResponseList:
      description: A list of addresses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Addresses'
