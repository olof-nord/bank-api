openapi: '3.0.0'
info:
  version: '1.0.0'
  title: Fake Bank - Customer API
  description: The great Customer API to Rule them All
  contact:
    name: Olof Nord
    url: http://olof.info
  license:
    name: GNU General Public License Version 3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
servers:
  - url: http://bank.olof.info/v1
    description: Production API server
  - url: http://dev.bank.olof.info/v1
    description: Development API server
paths:
  /customers:
    get:
      summary: List all customers
      operationId: 'getCustomers'
      responses:
        200:
          $ref: '#/components/responses/Customers'

    post:
      summary: Create a customer
      operationId: 'createCustomer'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        201:
          $ref: '#/components/responses/Customer'
        422:
          $ref: '#/components/responses/CreationFailed'

  /customers/{email}:
    get:
      summary: Gets a customer by email
      operationId: 'getCustomer'
      parameters:
        - $ref: '#/components/parameters/Email'
      responses:
        200:
          $ref: '#/components/responses/Customer'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
components:
  # Reusable schemas (data models)
  schemas:
    Customer:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
          maxLength: 255
          example: Sven
        lastName:
          type: string
          maxLength: 255
          example: Svensson
        email:
          type: string
          maxLength: 100
          example: sven.svensson@gmail.com
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'

  # Reusable operation parameters
  parameters:
    Email:
      name: email
      in: path
      required: true
      description: The email of the customer to retrieve
      example: sven.svensson@gmail.com
      schema:
        type: string

  # Reusable responses
  responses:
    NotFound:
      description: Customer not found
    BadRequest:
      description: Customer lookup incorrect
    CreationFailed:
      description: Customer creation failed
    Customer:
      description: A customer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    Customers:
      description: A list of customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customers'
