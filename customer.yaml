openapi: '3.0.0'
info:
  version: '1.0.0'
  title: Fake Bank - Customer API
  description: The great Customer API to Rule them All
  contact:
    name: Olof Nord
    url: http://olof.info
  license:
    name: GNU General Public License Version 3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
servers:
  - url: http://bank.olof.info/v1
    description: Production API server
  - url: http://dev.bank.olof.info/v1
    description: Development API server
paths:
  /customers:
    get:
      summary: List all customers
      responses:
        200:
          $ref: '#/components/responses/CustomerResponseList'
    post:
      summary: Create a new customer
      requestBody:
        $ref: '#/components/requestBodies/CustomerRequestBody'
      responses:
        201:
          $ref: '#/components/responses/Customer'
        422:
          $ref: '#/components/responses/CreationFailed'

  /customers/{customer-id}:
    get:
      summary: List a single customer
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      responses:
        200:
          $ref: '#/components/responses/Customer'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'

  /customers/{customer-id}/addresses:
    get:
      summary: List all addresses of a customer
      responses:
        200:
          $ref: '#/components/responses/CustomerResponseList'
    post:
      summary: Create a new customer address
      requestBody:
        $ref: '#/components/requestBodies/AddressRequestBody'
      responses:
        201:
          $ref: '#/components/responses/Address'
        422:
          $ref: '#/components/responses/CreationFailed'
  /customers/{customer-id}/addresses/{address-id}:
    get:
      summary: List a single customer address
      parameters:
        - $ref: '#/components/parameters/AddressId'
      responses:
        200:
          $ref: '#/components/responses/Address'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
components:
  # Reusable schemas (data models)
  schemas:
    Customer:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        id:
          type: string
          readOnly: true
          format: uuid
          example: ecd8c8a9-edf7-4ad6-a958-f592501c8c00
          description: The generated customer id
        firstName:
          type: string
          maxLength: 255
          example: Sven
          description: The full first name
        lastName:
          type: string
          maxLength: 255
          example: Svensson
          description: The full last name
        email:
          type: string
          maxLength: 100
          format: email
          example: sven.svensson@gmail.com
          description: The email address
        addresses:
          $ref: '#/components/schemas/Addresses'
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'

    Address:
      type: object
      required:
        - streetAndNumber
        - postcode
        - city
        - country
      properties:
        id:
          type: string
          readOnly: true
          format: uuid
          example: b7f538d2-4c03-4c45-9071-9a2bd158c597
          description: The generated address id
        alias:
          type: string
          maxLength: 255
          example: Home
          description: An alias for the address
        streetAndNumber:
          type: string
          maxLength: 255
          example: Panoramastr. 1A
          description: The street and street number
        additionalInformation:
          type: string
          maxLength: 255
          example: Backyard
          description: Additional information
        postcode:
          type: integer
          example: 10178
          description: The postal code
        city:
          type: string
          maxLength: 255
          example: Berlin
          description: The city
        country:
          type: string
          maxLength: 255
          example: Germany
          description: The country
    Addresses:
      type: array
      description: All customer addresses
      items:
        $ref: '#/components/schemas/Address'

  # Reusable operation parameters
  parameters:
    CustomerId:
      name: customerId
      in: path
      required: true
      description: The id of the customer to retrieve
      example: ecd8c8a9-edf7-4ad6-a958-f592501c8c00
      schema:
        type: string
    AddressId:
      name: addressId
      in: path
      required: true
      description: The id of the address to retrieve
      example: b7f538d2-4c03-4c45-9071-9a2bd158c597
      schema:
        type: string

  # Reusable request bodies
  requestBodies:
    CustomerRequestBody:
      description: Body to create a customer
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    AddressRequestBody:
      description: Body to create a customer address
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'

  # Reusable responses
  responses:
    NotFound:
      description: Resource not found
    BadRequest:
      description: Resource lookup failed
    CreationFailed:
      description: Resource creation failed
    CustomerResponse:
      description: Customer response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    CustomerResponseList:
      description: A list of customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customers'
    AddressResponse:
      description: Address response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Address'
    AddressResponseList:
      description: A list of addresses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Addresses'
